{
  "api/VisualCard.CardTools.html": {
    "href": "api/VisualCard.CardTools.html",
    "title": "Class CardTools | VisualCard API - Eofla Internals",
    "keywords": "Class CardTools Module for VCard management Inheritance System.Object CardTools Namespace : VisualCard Assembly : VisualCard.dll Syntax public static class CardTools : object Methods GetCardParsers(StreamReader) Gets the list of parsers for single/multiple contacts from the stream Declaration public static List<BaseVcardParser> GetCardParsers(StreamReader stream) Parameters Type Name Description StreamReader stream Stream containing the contacts Returns Type Description List < BaseVcardParser > List of contact parsers for single or multiple contacts GetCardParsers(String) Gets the list of parsers for single/multiple contacts from the path Declaration public static List<BaseVcardParser> GetCardParsers(string Path) Parameters Type Name Description System.String Path Path to the contacts file Returns Type Description List < BaseVcardParser > List of contact parsers for single or multiple contacts GetCardParsersFromString(String) Gets the list of parsers for single/multiple contacts from the string Declaration public static List<BaseVcardParser> GetCardParsersFromString(string cardText) Parameters Type Name Description System.String cardText Returns Type Description List < BaseVcardParser > List of contact parsers for single or multiple contacts"
  },
  "api/VisualCard.Converters.AndroidContactsDb.html": {
    "href": "api/VisualCard.Converters.AndroidContactsDb.html",
    "title": "Class AndroidContactsDb | VisualCard API - Eofla Internals",
    "keywords": "Class AndroidContactsDb Android contacts database management class Inheritance System.Object AndroidContactsDb Namespace : VisualCard.Converters Assembly : VisualCard.dll Syntax public static class AndroidContactsDb : object Methods GetContactsFromDb(String) Gets all contacts from the Android database Declaration public static List<BaseVcardParser> GetContactsFromDb(string pathToDb) Parameters Type Name Description System.String pathToDb Path to the valid contacts2.db file, usually fetched from /data/data/android.providers.contacts/databases/ found in the rooted Android devices Returns Type Description List < BaseVcardParser >"
  },
  "api/VisualCard.Converters.html": {
    "href": "api/VisualCard.Converters.html",
    "title": "Namespace VisualCard.Converters | VisualCard API - Eofla Internals",
    "keywords": "Namespace VisualCard.Converters Classes AndroidContactsDb Android contacts database management class"
  },
  "api/VisualCard.Exceptions.html": {
    "href": "api/VisualCard.Exceptions.html",
    "title": "Namespace VisualCard.Exceptions | VisualCard API - Eofla Internals",
    "keywords": "Namespace VisualCard.Exceptions Classes VCardParseException"
  },
  "api/VisualCard.Exceptions.VCardParseException.html": {
    "href": "api/VisualCard.Exceptions.VCardParseException.html",
    "title": "Class VCardParseException | VisualCard API - Eofla Internals",
    "keywords": "Class VCardParseException Inheritance System.Object VCardParseException Namespace : VisualCard.Exceptions Assembly : VisualCard.dll Syntax public class VCardParseException : Exception Constructors VCardParseException() Declaration public VCardParseException() VCardParseException(String, String, Int32, Exception) Declaration public VCardParseException(string message, string line, int linenumber, Exception innerException) Parameters Type Name Description System.String message System.String line System.Int32 linenumber Exception innerException"
  },
  "api/VisualCard.html": {
    "href": "api/VisualCard.html",
    "title": "Namespace VisualCard | VisualCard API - Eofla Internals",
    "keywords": "Namespace VisualCard Classes CardTools Module for VCard management"
  },
  "api/VisualCard.Parsers.BaseVcardParser.html": {
    "href": "api/VisualCard.Parsers.BaseVcardParser.html",
    "title": "Class BaseVcardParser | VisualCard API - Eofla Internals",
    "keywords": "Class BaseVcardParser Inheritance System.Object BaseVcardParser VcardFour VcardThree VcardTwo Implements IVcardParser Namespace : VisualCard.Parsers Assembly : VisualCard.dll Syntax public abstract class BaseVcardParser : object, IVcardParser Properties CardContent Declaration public virtual string CardContent { get; } Property Value Type Description System.String CardVersion Declaration public virtual string CardVersion { get; } Property Value Type Description System.String Methods Parse() Declaration public abstract Card Parse() Returns Type Description Card Implements IVcardParser"
  },
  "api/VisualCard.Parsers.Four.html": {
    "href": "api/VisualCard.Parsers.Four.html",
    "title": "Namespace VisualCard.Parsers.Four | VisualCard API - Eofla Internals",
    "keywords": "Namespace VisualCard.Parsers.Four Classes VcardFour Parser for VCard version 4.0. Consult the vcard-40-rfc6350.txt file in source for the specification."
  },
  "api/VisualCard.Parsers.Four.VcardFour.html": {
    "href": "api/VisualCard.Parsers.Four.VcardFour.html",
    "title": "Class VcardFour | VisualCard API - Eofla Internals",
    "keywords": "Class VcardFour Parser for VCard version 4.0. Consult the vcard-40-rfc6350.txt file in source for the specification. Inheritance System.Object BaseVcardParser VcardFour Implements IVcardParser Namespace : VisualCard.Parsers.Four Assembly : VisualCard.dll Syntax public class VcardFour : BaseVcardParser, IVcardParser Properties CardContent Declaration public override string CardContent { get; } Property Value Type Description System.String Overrides BaseVcardParser.CardContent CardVersion Declaration public override string CardVersion { get; } Property Value Type Description System.String Overrides BaseVcardParser.CardVersion Methods Parse() Declaration public override Card Parse() Returns Type Description Card Overrides BaseVcardParser.Parse() Implements IVcardParser"
  },
  "api/VisualCard.Parsers.html": {
    "href": "api/VisualCard.Parsers.html",
    "title": "Namespace VisualCard.Parsers | VisualCard API - Eofla Internals",
    "keywords": "Namespace VisualCard.Parsers Classes BaseVcardParser Interfaces IVcardParser VCard parser interface"
  },
  "api/VisualCard.Parsers.IVcardParser.html": {
    "href": "api/VisualCard.Parsers.IVcardParser.html",
    "title": "Interface IVcardParser | VisualCard API - Eofla Internals",
    "keywords": "Interface IVcardParser VCard parser interface Namespace : VisualCard.Parsers Assembly : VisualCard.dll Syntax public interface IVcardParser Properties CardContent Contents of the VCard Declaration string CardContent { get; } Property Value Type Description System.String CardVersion The version of the card Declaration string CardVersion { get; } Property Value Type Description System.String Methods Parse() Parses the VCard file Declaration Card Parse() Returns Type Description Card"
  },
  "api/VisualCard.Parsers.Three.html": {
    "href": "api/VisualCard.Parsers.Three.html",
    "title": "Namespace VisualCard.Parsers.Three | VisualCard API - Eofla Internals",
    "keywords": "Namespace VisualCard.Parsers.Three Classes VcardThree Parser for VCard version 3.0. Consult the vcard-30-rfc2426.txt file in source for the specification."
  },
  "api/VisualCard.Parsers.Three.VcardThree.html": {
    "href": "api/VisualCard.Parsers.Three.VcardThree.html",
    "title": "Class VcardThree | VisualCard API - Eofla Internals",
    "keywords": "Class VcardThree Parser for VCard version 3.0. Consult the vcard-30-rfc2426.txt file in source for the specification. Inheritance System.Object BaseVcardParser VcardThree Implements IVcardParser Namespace : VisualCard.Parsers.Three Assembly : VisualCard.dll Syntax public class VcardThree : BaseVcardParser, IVcardParser Properties CardContent Declaration public override string CardContent { get; } Property Value Type Description System.String Overrides BaseVcardParser.CardContent CardVersion Declaration public override string CardVersion { get; } Property Value Type Description System.String Overrides BaseVcardParser.CardVersion Methods Parse() Declaration public override Card Parse() Returns Type Description Card Overrides BaseVcardParser.Parse() Implements IVcardParser"
  },
  "api/VisualCard.Parsers.Two.html": {
    "href": "api/VisualCard.Parsers.Two.html",
    "title": "Namespace VisualCard.Parsers.Two | VisualCard API - Eofla Internals",
    "keywords": "Namespace VisualCard.Parsers.Two Classes VcardTwo Parser for VCard version 2.1. Consult the vcard-21.txt file in source for the specification."
  },
  "api/VisualCard.Parsers.Two.VcardTwo.html": {
    "href": "api/VisualCard.Parsers.Two.VcardTwo.html",
    "title": "Class VcardTwo | VisualCard API - Eofla Internals",
    "keywords": "Class VcardTwo Parser for VCard version 2.1. Consult the vcard-21.txt file in source for the specification. Inheritance System.Object BaseVcardParser VcardTwo Implements IVcardParser Namespace : VisualCard.Parsers.Two Assembly : VisualCard.dll Syntax public class VcardTwo : BaseVcardParser, IVcardParser Properties CardContent Declaration public override string CardContent { get; } Property Value Type Description System.String Overrides BaseVcardParser.CardContent CardVersion Declaration public override string CardVersion { get; } Property Value Type Description System.String Overrides BaseVcardParser.CardVersion Methods Parse() Declaration public override Card Parse() Returns Type Description Card Overrides BaseVcardParser.Parse() Implements IVcardParser"
  },
  "api/VisualCard.Parts.AddressInfo.html": {
    "href": "api/VisualCard.Parts.AddressInfo.html",
    "title": "Class AddressInfo | VisualCard API - Eofla Internals",
    "keywords": "Class AddressInfo Inheritance System.Object AddressInfo Namespace : VisualCard.Parts Assembly : VisualCard.dll Syntax public class AddressInfo : object Properties AddressTypes The contact's address types Declaration public string[] AddressTypes { get; } Property Value Type Description System.String [] AltId Alternative ID. Zero if unspecified. Declaration public int AltId { get; } Property Value Type Description System.Int32 Country The contact's country Declaration public string Country { get; } Property Value Type Description System.String ExtendedAddress The contact's extended address Declaration public string ExtendedAddress { get; } Property Value Type Description System.String Locality The contact's locality Declaration public string Locality { get; } Property Value Type Description System.String PostalCode The contact's postal code Declaration public string PostalCode { get; } Property Value Type Description System.String PostOfficeBox The contact's post office box Declaration public string PostOfficeBox { get; } Property Value Type Description System.String Region The contact's region Declaration public string Region { get; } Property Value Type Description System.String StreetAddress The contact's street address Declaration public string StreetAddress { get; } Property Value Type Description System.String"
  },
  "api/VisualCard.Parts.Card.html": {
    "href": "api/VisualCard.Parts.Card.html",
    "title": "Class Card | VisualCard API - Eofla Internals",
    "keywords": "Class Card Inheritance System.Object Card Namespace : VisualCard.Parts Assembly : VisualCard.dll Syntax public class Card : object Properties CardKind The VCard kind (individual is the default) Declaration public string CardKind { get; } Property Value Type Description System.String CardRevision The card revision Declaration public DateTime? CardRevision { get; set; } Property Value Type Description System.Nullable < DateTime > CardVersion The VCard version Declaration public string CardVersion { get; } Property Value Type Description System.String ContactAddresses The contact's addresses Declaration public AddressInfo[] ContactAddresses { get; set; } Property Value Type Description AddressInfo [] ContactBirthdate The contact's birthdate Declaration public DateTime? ContactBirthdate { get; set; } Property Value Type Description System.Nullable < DateTime > ContactCategories The contact's categories Declaration public string[] ContactCategories { get; set; } Property Value Type Description System.String [] ContactFullName The contact's full name Declaration public string ContactFullName { get; set; } Property Value Type Description System.String ContactGeo The contact's geographical coordinates in (lat;long) Declaration public GeoInfo[] ContactGeo { get; set; } Property Value Type Description GeoInfo [] ContactImpps The contact's IMPP information Declaration public ImppInfo[] ContactImpps { get; set; } Property Value Type Description ImppInfo [] ContactLogos The contact's logos Declaration public LogoInfo[] ContactLogos { get; set; } Property Value Type Description LogoInfo [] ContactMailer The contact's mailing software Declaration public string ContactMailer { get; set; } Property Value Type Description System.String ContactMails The contact's e-mails Declaration public EmailInfo[] ContactMails { get; set; } Property Value Type Description EmailInfo [] ContactNames The contact's names Declaration public NameInfo[] ContactNames { get; set; } Property Value Type Description NameInfo [] ContactNicknames The contact's nicknames Declaration public NicknameInfo[] ContactNicknames { get; set; } Property Value Type Description NicknameInfo [] ContactNotes The contact's notes Declaration public string ContactNotes { get; set; } Property Value Type Description System.String ContactOrganizations The contact's organizations Declaration public OrganizationInfo[] ContactOrganizations { get; set; } Property Value Type Description OrganizationInfo [] ContactPhotos The contact's photos Declaration public PhotoInfo[] ContactPhotos { get; set; } Property Value Type Description PhotoInfo [] ContactProdId The contact's product ID Declaration public string ContactProdId { get; set; } Property Value Type Description System.String ContactRoles The contact's roles Declaration public RoleInfo[] ContactRoles { get; set; } Property Value Type Description RoleInfo [] ContactSortString The contact's sort string Declaration public string ContactSortString { get; set; } Property Value Type Description System.String ContactSounds The contact's sounds Declaration public SoundInfo[] ContactSounds { get; set; } Property Value Type Description SoundInfo [] ContactTelephones The contact's telephones Declaration public TelephoneInfo[] ContactTelephones { get; set; } Property Value Type Description TelephoneInfo [] ContactTimeZone The contact's time zones Declaration public TimeZoneInfo[] ContactTimeZone { get; set; } Property Value Type Description TimeZoneInfo [] ContactTitles The contact's titles Declaration public TitleInfo[] ContactTitles { get; set; } Property Value Type Description TitleInfo [] ContactURL The contact's URL Declaration public string ContactURL { get; set; } Property Value Type Description System.String ContactXNames The contact's extended options (usually starts with X-SOMETHING:Value1;Value2...) Declaration public XNameInfo[] ContactXNames { get; set; } Property Value Type Description XNameInfo [] Methods SaveTo(String) Saves the contact file to the path Declaration public void SaveTo(string path) Parameters Type Name Description System.String path Path to the VCard file that is going to be created SaveToString() Saves the contact to the returned string Declaration public string SaveToString() Returns Type Description System.String"
  },
  "api/VisualCard.Parts.EmailInfo.html": {
    "href": "api/VisualCard.Parts.EmailInfo.html",
    "title": "Class EmailInfo | VisualCard API - Eofla Internals",
    "keywords": "Class EmailInfo Inheritance System.Object EmailInfo Namespace : VisualCard.Parts Assembly : VisualCard.dll Syntax public class EmailInfo : object Properties AltId Alternative ID. Zero if unspecified. Declaration public int AltId { get; } Property Value Type Description System.Int32 ContactEmailAddress The contact's email address Declaration public string ContactEmailAddress { get; } Property Value Type Description System.String ContactEmailTypes The contact's email types Declaration public string[] ContactEmailTypes { get; } Property Value Type Description System.String []"
  },
  "api/VisualCard.Parts.GeoInfo.html": {
    "href": "api/VisualCard.Parts.GeoInfo.html",
    "title": "Class GeoInfo | VisualCard API - Eofla Internals",
    "keywords": "Class GeoInfo Inheritance System.Object GeoInfo Namespace : VisualCard.Parts Assembly : VisualCard.dll Syntax public class GeoInfo : object Properties AltArguments Arguments that follow the AltId Declaration public string[] AltArguments { get; } Property Value Type Description System.String [] AltId Alternative ID. Zero if unspecified. Declaration public int AltId { get; } Property Value Type Description System.Int32 Geo The contact's geographical information Declaration public string Geo { get; } Property Value Type Description System.String"
  },
  "api/VisualCard.Parts.html": {
    "href": "api/VisualCard.Parts.html",
    "title": "Namespace VisualCard.Parts | VisualCard API - Eofla Internals",
    "keywords": "Namespace VisualCard.Parts Classes AddressInfo Card EmailInfo GeoInfo ImppInfo LogoInfo NameInfo NicknameInfo OrganizationInfo PhotoInfo RoleInfo SoundInfo TelephoneInfo TimeZoneInfo TitleInfo XNameInfo"
  },
  "api/VisualCard.Parts.ImppInfo.html": {
    "href": "api/VisualCard.Parts.ImppInfo.html",
    "title": "Class ImppInfo | VisualCard API - Eofla Internals",
    "keywords": "Class ImppInfo Inheritance System.Object ImppInfo Namespace : VisualCard.Parts Assembly : VisualCard.dll Syntax public class ImppInfo : object Properties AltArguments Arguments that follow the AltId Declaration public string[] AltArguments { get; } Property Value Type Description System.String [] AltId Alternative ID. Zero if unspecified. Declaration public int AltId { get; } Property Value Type Description System.Int32 ContactIMPP The contact's IMPP information, such as SIP and XMPP Declaration public string ContactIMPP { get; } Property Value Type Description System.String ImppTypes The contact's IMPP info types Declaration public string[] ImppTypes { get; } Property Value Type Description System.String []"
  },
  "api/VisualCard.Parts.LogoInfo.html": {
    "href": "api/VisualCard.Parts.LogoInfo.html",
    "title": "Class LogoInfo | VisualCard API - Eofla Internals",
    "keywords": "Class LogoInfo Inheritance System.Object LogoInfo Namespace : VisualCard.Parts Assembly : VisualCard.dll Syntax public class LogoInfo : object Properties AltArguments Arguments that follow the AltId Declaration public string[] AltArguments { get; } Property Value Type Description System.String [] AltId Alternative ID. Zero if unspecified. Declaration public int AltId { get; } Property Value Type Description System.Int32 Encoding Logo encoding type Declaration public string Encoding { get; } Property Value Type Description System.String LogoEncoded Encoded logo Declaration public string LogoEncoded { get; } Property Value Type Description System.String LogoType Logo type (JPEG, ...) Declaration public string LogoType { get; } Property Value Type Description System.String ValueType Value type Declaration public string ValueType { get; } Property Value Type Description System.String"
  },
  "api/VisualCard.Parts.NameInfo.html": {
    "href": "api/VisualCard.Parts.NameInfo.html",
    "title": "Class NameInfo | VisualCard API - Eofla Internals",
    "keywords": "Class NameInfo Inheritance System.Object NameInfo Namespace : VisualCard.Parts Assembly : VisualCard.dll Syntax public class NameInfo : object Properties AltArguments Arguments that follow the AltId Declaration public string[] AltArguments { get; } Property Value Type Description System.String [] AltId Alternative ID. Zero if unspecified. Declaration public int AltId { get; } Property Value Type Description System.Int32 AltNames The contact's alternative names Declaration public string[] AltNames { get; } Property Value Type Description System.String [] ContactFirstName The contact's first name Declaration public string ContactFirstName { get; } Property Value Type Description System.String ContactLastName The contact's last name Declaration public string ContactLastName { get; } Property Value Type Description System.String Prefixes The contact's prefixes Declaration public string[] Prefixes { get; } Property Value Type Description System.String [] Suffixes The contact's suffixes Declaration public string[] Suffixes { get; } Property Value Type Description System.String []"
  },
  "api/VisualCard.Parts.NicknameInfo.html": {
    "href": "api/VisualCard.Parts.NicknameInfo.html",
    "title": "Class NicknameInfo | VisualCard API - Eofla Internals",
    "keywords": "Class NicknameInfo Inheritance System.Object NicknameInfo Namespace : VisualCard.Parts Assembly : VisualCard.dll Syntax public class NicknameInfo : object Properties AltArguments Arguments that follow the AltId Declaration public string[] AltArguments { get; } Property Value Type Description System.String [] AltId Alternative ID. Zero if unspecified. Declaration public int AltId { get; } Property Value Type Description System.Int32 ContactNickname The contact's nickname Declaration public string ContactNickname { get; } Property Value Type Description System.String NicknameTypes The contact's nickname types Declaration public string[] NicknameTypes { get; } Property Value Type Description System.String []"
  },
  "api/VisualCard.Parts.OrganizationInfo.html": {
    "href": "api/VisualCard.Parts.OrganizationInfo.html",
    "title": "Class OrganizationInfo | VisualCard API - Eofla Internals",
    "keywords": "Class OrganizationInfo Inheritance System.Object OrganizationInfo Namespace : VisualCard.Parts Assembly : VisualCard.dll Syntax public class OrganizationInfo : object Properties AltId Alternative ID. Zero if unspecified. Declaration public int AltId { get; } Property Value Type Description System.Int32 Name The contact's organization name Declaration public string Name { get; } Property Value Type Description System.String OrgTypes The contact's organization types Declaration public string[] OrgTypes { get; } Property Value Type Description System.String [] Role The contact's organization unit's role Declaration public string Role { get; } Property Value Type Description System.String Unit The contact's organization unit Declaration public string Unit { get; } Property Value Type Description System.String"
  },
  "api/VisualCard.Parts.PhotoInfo.html": {
    "href": "api/VisualCard.Parts.PhotoInfo.html",
    "title": "Class PhotoInfo | VisualCard API - Eofla Internals",
    "keywords": "Class PhotoInfo Inheritance System.Object PhotoInfo Namespace : VisualCard.Parts Assembly : VisualCard.dll Syntax public class PhotoInfo : object Properties AltArguments Arguments that follow the AltId Declaration public string[] AltArguments { get; } Property Value Type Description System.String [] AltId Alternative ID. Zero if unspecified. Declaration public int AltId { get; } Property Value Type Description System.Int32 Encoding Photo encoding type Declaration public string Encoding { get; } Property Value Type Description System.String PhotoEncoded Encoded photo Declaration public string PhotoEncoded { get; } Property Value Type Description System.String PhotoType Photo type (JPEG, ...) Declaration public string PhotoType { get; } Property Value Type Description System.String ValueType Value type Declaration public string ValueType { get; } Property Value Type Description System.String"
  },
  "api/VisualCard.Parts.RoleInfo.html": {
    "href": "api/VisualCard.Parts.RoleInfo.html",
    "title": "Class RoleInfo | VisualCard API - Eofla Internals",
    "keywords": "Class RoleInfo Inheritance System.Object RoleInfo Namespace : VisualCard.Parts Assembly : VisualCard.dll Syntax public class RoleInfo : object Properties AltArguments Arguments that follow the AltId Declaration public string[] AltArguments { get; } Property Value Type Description System.String [] AltId Alternative ID. Zero if unspecified. Declaration public int AltId { get; } Property Value Type Description System.Int32 ContactRole The contact's role Declaration public string ContactRole { get; } Property Value Type Description System.String"
  },
  "api/VisualCard.Parts.SoundInfo.html": {
    "href": "api/VisualCard.Parts.SoundInfo.html",
    "title": "Class SoundInfo | VisualCard API - Eofla Internals",
    "keywords": "Class SoundInfo Inheritance System.Object SoundInfo Namespace : VisualCard.Parts Assembly : VisualCard.dll Syntax public class SoundInfo : object Properties AltArguments Arguments that follow the AltId Declaration public string[] AltArguments { get; } Property Value Type Description System.String [] AltId Alternative ID. Zero if unspecified. Declaration public int AltId { get; } Property Value Type Description System.Int32 Encoding Sound encoding type Declaration public string Encoding { get; } Property Value Type Description System.String SoundEncoded Encoded sound Declaration public string SoundEncoded { get; } Property Value Type Description System.String SoundType Sound type (JPEG, ...) Declaration public string SoundType { get; } Property Value Type Description System.String ValueType Value type Declaration public string ValueType { get; } Property Value Type Description System.String"
  },
  "api/VisualCard.Parts.TelephoneInfo.html": {
    "href": "api/VisualCard.Parts.TelephoneInfo.html",
    "title": "Class TelephoneInfo | VisualCard API - Eofla Internals",
    "keywords": "Class TelephoneInfo Inheritance System.Object TelephoneInfo Namespace : VisualCard.Parts Assembly : VisualCard.dll Syntax public class TelephoneInfo : object Properties AltId Alternative ID. Zero if unspecified. Declaration public int AltId { get; } Property Value Type Description System.Int32 ContactPhoneNumber The contact's phone number Declaration public string ContactPhoneNumber { get; } Property Value Type Description System.String ContactPhoneTypes The contact's phone types Declaration public string[] ContactPhoneTypes { get; } Property Value Type Description System.String []"
  },
  "api/VisualCard.Parts.TimeZoneInfo.html": {
    "href": "api/VisualCard.Parts.TimeZoneInfo.html",
    "title": "Class TimeZoneInfo | VisualCard API - Eofla Internals",
    "keywords": "Class TimeZoneInfo Inheritance System.Object TimeZoneInfo Namespace : VisualCard.Parts Assembly : VisualCard.dll Syntax public class TimeZoneInfo : object Properties AltArguments Arguments that follow the AltId Declaration public string[] AltArguments { get; } Property Value Type Description System.String [] AltId Alternative ID. Zero if unspecified. Declaration public int AltId { get; } Property Value Type Description System.Int32 TimeZone The contact's time zone Declaration public string TimeZone { get; } Property Value Type Description System.String"
  },
  "api/VisualCard.Parts.TitleInfo.html": {
    "href": "api/VisualCard.Parts.TitleInfo.html",
    "title": "Class TitleInfo | VisualCard API - Eofla Internals",
    "keywords": "Class TitleInfo Inheritance System.Object TitleInfo Namespace : VisualCard.Parts Assembly : VisualCard.dll Syntax public class TitleInfo : object Properties AltArguments Arguments that follow the AltId Declaration public string[] AltArguments { get; } Property Value Type Description System.String [] AltId Alternative ID. Zero if unspecified. Declaration public int AltId { get; } Property Value Type Description System.Int32 ContactTitle The contact's title Declaration public string ContactTitle { get; } Property Value Type Description System.String"
  },
  "api/VisualCard.Parts.XNameInfo.html": {
    "href": "api/VisualCard.Parts.XNameInfo.html",
    "title": "Class XNameInfo | VisualCard API - Eofla Internals",
    "keywords": "Class XNameInfo Inheritance System.Object XNameInfo Namespace : VisualCard.Parts Assembly : VisualCard.dll Syntax public class XNameInfo : object Properties AltId Alternative ID. Zero if unspecified. Declaration public int AltId { get; } Property Value Type Description System.Int32 XKeyName X- key name Declaration public string XKeyName { get; } Property Value Type Description System.String XKeyTypes X- values Declaration public string[] XKeyTypes { get; } Property Value Type Description System.String [] XValues X- values Declaration public string[] XValues { get; } Property Value Type Description System.String []"
  },
  "index.html": {
    "href": "index.html",
    "title": "What is VisualCard? | VisualCard API - Eofla Internals",
    "keywords": "What is VisualCard? VisualCard is a library that parses the contact files created by Outlook or other programs. It supports both single-contact VCF files and multiple-contact VCF files. What is this web page? This webpage is an API documentation for mod developers to be used as reference. It constantly gets updated as we push the updates to the main and servicing versions of this project. If you still intend to use a documentation specific to your preferred version of VisualCard, you may refer to the releases page of the project and download the attached <version>-doc.rar file. To get started using the documentation, select API Documentation from the top menu and select a namespace to get a clear overview of the API. Feedback If you wish to leave feedback to us about this API reference website, use the issue tracker of the project. If you wish to contribute to the documentation of the API, go to the project source code and make your improvements there on a draft Pull Request ; we don't support override files that are made by clicking on Improve this doc . Any meaningful contributions are welcome. Copyright (c) 2022 Aptivi. All rights reserved."
  }
}